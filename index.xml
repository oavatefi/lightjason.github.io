<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LightJason</title>
    <link>https://lightjason.org/</link>
    <description>Recent content on LightJason</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 13 Jul 2018 14:38:03 +0100</lastBuildDate>
    
	<atom:link href="https://lightjason.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Removing REST Component</title>
      <link>https://lightjason.org/news/2018-07-removerest/</link>
      <pubDate>Fri, 13 Jul 2018 14:38:03 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2018-07-removerest/</guid>
      <description>We have removed the REST component of LightJason AgentSpeak. 
The motivation of removing the REST-API is, that in a lot of use-cases you need more use-case-defined REST calls which are more application-based.</description>
    </item>
    
    <item>
      <title>AAMAS 2018 Demo</title>
      <link>https://lightjason.org/news/2018-07-aamas/</link>
      <pubDate>Thu, 12 Jul 2018 17:38:03 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2018-07-aamas/</guid>
      <description>&lt;p&gt;We have visited the AAMAS 2018 in Stockholm and would like to say &amp;ldquo;thank you&amp;rdquo; for some nice talks.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Preparing 2nd Release &amp; Reorganizing Project</title>
      <link>https://lightjason.org/news/2018-07-secondrelease/</link>
      <pubDate>Thu, 12 Jul 2018 14:38:03 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2018-07-secondrelease/</guid>
      <description>&lt;p&gt;We are currently planning the second release through which we have to reorganize large parts of the project, so some parts of the website may be broken. Furthermore we would like to announce new features especially in the area of machine learning in LightJason.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LightJason: First Releases Published at Maven Central</title>
      <link>https://lightjason.org/news/2018-02-firstreleases/</link>
      <pubDate>Mon, 26 Feb 2018 14:38:03 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2018-02-firstreleases/</guid>
      <description>&lt;p&gt;We are happy to announce that we just released our first packaged versions of &lt;a href=&#34;http://github.com/LightJason/AgentSpeak-Java&#34;&gt;AgentSpeak(L++)&lt;/a&gt; to &lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.lightjason%22&#34;&gt;maven central&lt;/a&gt;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LightJason Joined Docker-Hub Community</title>
      <link>https://lightjason.org/news/2017-12-docker/</link>
      <pubDate>Thu, 07 Dec 2017 22:38:03 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2017-12-docker/</guid>
      <description>&lt;p&gt;We joined the &lt;a href=&#34;https://hub.docker.com/u/lightjason/&#34;&gt;Docker-Hub&lt;/a&gt; community with LightJason. &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Planning AAMAS 2018 Demo</title>
      <link>https://lightjason.org/news/2017-11-planningaamas/</link>
      <pubDate>Wed, 15 Nov 2017 09:00:44 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2017-11-planningaamas/</guid>
      <description>Our recent practical applications of LightJason in the SocialCars simulation workshop and the DAIMON project helped us to find further real-life use cases for our multi-agent system. Additionally we plan to submit LightJason for a demonstration at AAMAS 2018. Fingers crossed!</description>
    </item>
    
    <item>
      <title>Application in DAIMON project</title>
      <link>https://lightjason.org/news/2017-11-daimon/</link>
      <pubDate>Wed, 15 Nov 2017 08:57:47 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2017-11-daimon/</guid>
      <description>&lt;p&gt;The AgentSpeak(L++) component will find further use in the &lt;a href=&#34;http://www.daimonproject.com/&#34;&gt;DAIMON&lt;/a&gt; project.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Multi-Agent Workshop - Traffic Game</title>
      <link>https://lightjason.org/news/2017-09-workshop/</link>
      <pubDate>Fri, 29 Sep 2017 22:05:43 +0200</pubDate>
      
      <guid>https://lightjason.org/news/2017-09-workshop/</guid>
      <description>&lt;p&gt;We created a &lt;em&gt;traffic simulation game&lt;/em&gt; for the &lt;a href=&#34;https://www.socialcars.org/&#34;&gt;Socal Cars Multi-Agent Workshop&lt;/a&gt;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Code-Cleanup, Test-Case Coverage and Serialisable Components</title>
      <link>https://lightjason.org/news/2017-06-serial/</link>
      <pubDate>Tue, 27 Jun 2017 18:47:12 +0200</pubDate>
      
      <guid>https://lightjason.org/news/2017-06-serial/</guid>
      <description>&lt;p&gt;A large update of the AgentSpeak components extends the framework for distributed architectures, &lt;a href=&#34;https://en.wikipedia.org/wiki/Defensive_programming&#34;&gt;defensive programming&lt;/a&gt; and analysing and increases the code coverage.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Code coverage working in progress</title>
      <link>https://lightjason.org/news/2017-05-coverage/</link>
      <pubDate>Wed, 10 May 2017 09:53:24 +0200</pubDate>
      
      <guid>https://lightjason.org/news/2017-05-coverage/</guid>
      <description>&lt;p&gt;We are working on &lt;em&gt;unit-testing&lt;/em&gt; of the whole framework, so we append JUnit test to all main components.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Add simulation wizard</title>
      <link>https://lightjason.org/news/2017-03-wizard/</link>
      <pubDate>Wed, 29 Mar 2017 14:25:53 +0200</pubDate>
      
      <guid>https://lightjason.org/news/2017-03-wizard/</guid>
      <description>&lt;p&gt;We added a &lt;a href=&#34;https://lightjason.org/tutorials/wizard&#34;&gt;simulation wizard&lt;/a&gt; to the website, which can be used to create a full working project zip file, with the source codes of a multi-agent simulation.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Add Gitter chat</title>
      <link>https://lightjason.org/news/2017-02-chat/</link>
      <pubDate>Fri, 24 Feb 2017 12:08:10 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2017-02-chat/</guid>
      <description>&lt;p&gt;We add the realtime chat-system &lt;a href=&#34;http://gitter.im&#34;&gt;Gitter&lt;/a&gt; to our project to get into contact with you. &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Action documentation</title>
      <link>https://lightjason.org/news/2017-02-actiondocumentation/</link>
      <pubDate>Fri, 24 Feb 2017 12:02:16 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2017-02-actiondocumentation/</guid>
      <description>&lt;p&gt;We are working on a full documentation of all &lt;a href=&#34;https://lightjason.org/knowledgebase/builtinactions&#34;&gt;built-in actions&lt;/a&gt; in LightJason. &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Update actions and agent cycle documentation</title>
      <link>https://lightjason.org/news/2017-02-actionscycle/</link>
      <pubDate>Fri, 17 Feb 2017 20:29:56 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2017-02-actionscycle/</guid>
      <description>&lt;p&gt;Update &lt;a href=&#34;https://lightjason.org/knowledgebase/builtinactions&#34;&gt;actions&lt;/a&gt; and &lt;a href=&#34;https://lightjason.org/knowledgebase/differencetojason&#34;&gt;agent cycle&lt;/a&gt; description within the knowledge base. &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tutorial and knowledge base working in progress</title>
      <link>https://lightjason.org/news/2017-02-tutorials/</link>
      <pubDate>Fri, 10 Feb 2017 00:11:43 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2017-02-tutorials/</guid>
      <description>&lt;p&gt;Updated the &lt;a href=&#34;https://lightjason.org/knowledgebase&#34;&gt;knowledge base&lt;/a&gt; and &lt;a href=&#34;https://lightjason.org/tutorials&#34;&gt;tutorials&lt;/a&gt; and added an &lt;a href=&#34;https://github.com/LightJason/Examples&#34;&gt;example repository&lt;/a&gt; with source codes and generated jar files also: &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Add emergency video</title>
      <link>https://lightjason.org/news/2017-02-video/</link>
      <pubDate>Thu, 02 Feb 2017 01:13:14 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2017-02-video/</guid>
      <description>&lt;p&gt;Our first &lt;em&gt;benchmarking video&lt;/em&gt; (which is also inserted into our &lt;a href=&#34;https://lightjason.org/publications&#34;&gt;technical report&lt;/a&gt;). The video presents a performance test of our framework with 15.000 agents on an emergency scenario.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Update publication</title>
      <link>https://lightjason.org/news/2017-02-publication/</link>
      <pubDate>Wed, 01 Feb 2017 06:18:00 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2017-02-publication/</guid>
      <description>We have updated the our publication list and the PDF files for downloading.</description>
    </item>
    
    <item>
      <title>Mobile website</title>
      <link>https://lightjason.org/news/2017-01-mobile/</link>
      <pubDate>Thu, 05 Jan 2017 16:17:51 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2017-01-mobile/</guid>
      <description>We have created a mobile version of our website for any mobile devices, but we need to optimize the website for caching.</description>
    </item>
    
    <item>
      <title>Tutorial Update</title>
      <link>https://lightjason.org/news/2017-01-tutorial/</link>
      <pubDate>Sun, 01 Jan 2017 22:02:54 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2017-01-tutorial/</guid>
      <description>&lt;p&gt;We updated the tutorials with a short introduction in &lt;a href=&#34;https://lightjason.org/tutorials/efficient-beliefbase&#34;&gt;efficient beliefbases&lt;/a&gt; and &lt;a href=&#34;https://lightjason.org/tutorials/communication&#34;&gt;communication&lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EUMAS 2016 Slides</title>
      <link>https://lightjason.org/news/2016-12-eumas/</link>
      <pubDate>Thu, 15 Dec 2016 17:30:49 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2016-12-eumas/</guid>
      <description>&lt;p&gt;Our slides of our &lt;a href=&#34;http://eumas-at2016.webs.upv.es/EUMAS2016.html&#34;&gt;EUMAS 2016&lt;/a&gt; talk, a &lt;a href=&#34;https://lightjason.org/tutorials/agentspeak-in-fifteen-minutes&#34;&gt;15 minute tutorial&lt;/a&gt; to create a full working AgentSpeak(L++) example from scratch. &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>REST-API</title>
      <link>https://lightjason.org/news/2016-12-restapi/</link>
      <pubDate>Thu, 01 Dec 2016 17:23:49 +0100</pubDate>
      
      <guid>https://lightjason.org/news/2016-12-restapi/</guid>
      <description>&lt;p&gt;We added a &lt;a href=&#34;https://en.wikipedia.org/wiki/Representational_state_transfer&#34;&gt;REST-API&lt;/a&gt; to control the agent execution structure and behaviour. &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EUMAS 2016</title>
      <link>https://lightjason.org/news/2016-11-eumas/</link>
      <pubDate>Fri, 25 Nov 2016 11:30:33 +0200</pubDate>
      
      <guid>https://lightjason.org/news/2016-11-eumas/</guid>
      <description>&lt;p&gt;We will join the &lt;a href=&#34;http://eumas-at2016.webs.upv.es/EUMAS2016.html&#34;&gt;EUMAS 2016&lt;/a&gt; conference and present our current work. Right now we are within the testing-phase of LightJason&amp;rsquo;s AgentSpeak(L++). Right now there exist some examples for various domains and applications: &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Add Railroad / Syntax Diagrams</title>
      <link>https://lightjason.org/news/2016-07-railroad/</link>
      <pubDate>Sat, 16 Jul 2016 00:31:06 +0200</pubDate>
      
      <guid>https://lightjason.org/news/2016-07-railroad/</guid>
      <description>&lt;p&gt;For our &lt;a href=&#34;https://lightjason.org/framework/agentspeak&#34;&gt;AgentSpeak(L++)&lt;/a&gt; language definition, we have created &lt;a href=&#34;https://en.wikipedia.org/wiki/Syntax_diagram&#34;&gt;railroad / syntax diagrams&lt;/a&gt; based on the &lt;a href=&#34;https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_Form&#34;&gt;EBNF&lt;/a&gt; grammar definition. &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Project is start-up</title>
      <link>https://lightjason.org/news/2016-07-projectonline/</link>
      <pubDate>Fri, 01 Jul 2016 19:30:33 +0200</pubDate>
      
      <guid>https://lightjason.org/news/2016-07-projectonline/</guid>
      <description>&lt;p&gt;We have created the main website of the project, registered the domain &lt;a href=&#34;https://lightjason.org&#34;&gt;lightjason.org&lt;/a&gt; and right now trying to create the first full Maven package. &lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://lightjason.org/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/</guid>
      <description>LightJason is a concurrent BDI multi-agent framework for creating multi-agent systems with Java.
Multi-agent systems are generally considered a sub-discipline of Artificial Intelligence. We try to create a framework which allows to add AI algorithms to an existing software architecture as a mainly side-effect free programming language. The framework combines classical Artificial Intelligence methods with optimisation and fuzzy-logics concepts on a high-scalable concurrency architecture.
The project is inspired by AgentSpeak(L) and Jason, but designed and implemented from scratch.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://lightjason.org/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/about/</guid>
      <description>&lt;p&gt;We started this project as part of our Ph.D. work, because our research deals with &lt;a href=&#34;https://en.wikipedia.org/wiki/Multi-agent_system&#34;&gt;multi-agent systems&lt;/a&gt;.
Our research projects consider &lt;em&gt;traffic&lt;/em&gt; and &lt;em&gt;crowd simulation&lt;/em&gt;, and we try to simulate more &lt;em&gt;more complex human-like behaviour&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advanced Knowledge: Explicit Repair Actions</title>
      <link>https://lightjason.org/knowledgebase/repairactions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/repairactions/</guid>
      <description>&lt;p&gt;AgentSpeak(L++) supports the implementation of &lt;em&gt;repair planning&lt;/em&gt; with the default behaviour &lt;code&gt;-!&lt;/code&gt;. With this additional structure we also support &lt;a href=&#34;https://agentspeak-java.lightjason.org/rrd-output/html/org/lightjason/agentspeak/grammar/Agent.g4/index.htm#503f34271b101269197f766a6b90e4a9&#34;&gt;repair action chains&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advanced Knowledge: Failing is Intentional</title>
      <link>https://lightjason.org/knowledgebase/failing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/failing/</guid>
      <description>  Note: Under construction
 Deliberate Failing on Different Levels Produced by OmniGraffle 7.4.2 dc:date2017-09-18 14:45:54 +0000/dc:dateKnowledgebase - FailingLayer 1!main.triggers-!plan3 &amp;lt;--!plan2 &amp;lt;--!plan1 &amp;lt;-.+!plan3 &amp;lt;-+!plan2 &amp;lt;-+!plan1 &amp;lt;-.on failurerepairfailedplanstriggersretry/resumeStrategicTacticalaction1(): bool&amp;hellip;return false&amp;lt;&amp;lt;action2(): bool&amp;hellip;return false&amp;lt;&amp;lt;action3(): bool&amp;hellip;return trueon failon failOperationalrepair failedactionsexecute actions!plan2;!plan3;action1()&amp;lt;&amp;lt;action2()&amp;lt;&amp;lt;action3()rollback_action1();!planreturn on successreturn if action3 fails =&amp;gt; !plan1 fails
 Strategic
 Tactical
 Operational
  Tactical Level: Repair Plans Operational Level: Explicit Repair Actions Plans to Big to Fail: @atomic </description>
    </item>
    
    <item>
      <title>Advanced Knowledge: Lambda Expressions</title>
      <link>https://lightjason.org/knowledgebase/lambdaexpressions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/lambdaexpressions/</guid>
      <description>&lt;p&gt;AgentSpeak(L++) does not support looping directly; however, we support &lt;a href=&#34;https://agentspeak-java.lightjason.org/rrd-output/html/org/lightjason/agentspeak/grammar/Agent.g4/index.htm#945f3fc449518a73b9f5f32868db466c&#34;&gt;lambda expressions&lt;/a&gt; which are based on &lt;a href=&#34;https://en.wikipedia.org/wiki/Lambda_calculus&#34;&gt;lambda calculus&lt;/a&gt;. Similar to a &lt;em&gt;for each&lt;/em&gt; call, each element in an input list (variable) can be looped.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advanced Knowledge: Multi-Assignments</title>
      <link>https://lightjason.org/knowledgebase/multiassignments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/multiassignments/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;https://agentspeak-java.lightjason.org/rrd-output/html/org/lightjason/agentspeak/grammar/Agent.g4/index.htm#aaf72be46bb3458f45cf02c8858d96be&#34;&gt;multi-assignment&lt;/a&gt; allows to extract elements from a list into different variables. It is similar to the &lt;a href=&#34;https://en.wikibooks.org/wiki/Prolog/Lists&#34;&gt;head-tail-notation of Prolog&lt;/a&gt; but here we can create complex structures.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advanced Knowledge: Plan Triggering Techniques</title>
      <link>https://lightjason.org/knowledgebase/triggering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/triggering/</guid>
      <description>&lt;div id=&#34;toccontainer&#34;&gt;Contents [&lt;a href=&#34;#&#34; id=&#34;tochideshow&#34;&gt;Hide&lt;/a&gt;]&lt;div id=&#34;toc&#34;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&#34;vs&#34;&gt;&lt;code&gt;!&lt;/code&gt; vs &lt;code&gt;!!&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;The order of execution (parallel, sequential) of sub-&lt;a href=&#34;../plans&#34;&gt;plans&lt;/a&gt;, triggered inside their parent plan differs depending on the trigger symbol &lt;code&gt;!&lt;/code&gt; or &lt;code&gt;!!&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advanced Knowledge: Plan and Rule Annotations</title>
      <link>https://lightjason.org/knowledgebase/annotations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/annotations/</guid>
      <description>&lt;p&gt;Analogously to &lt;a href=&#34;https://en.wikipedia.org/wiki/Java_annotation&#34;&gt;Java&lt;/a&gt;, AgentSpeak(L++) also supports the concept of &lt;a href=&#34;https://agentspeak-java.lightjason.org/rrd-output/html/org/lightjason/agentspeak/grammar/Agent.g4/index.htm#4ab6864fc58ecd8b598ee10dfe2ac311&#34;&gt;annotations&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AgentSpeak(L&#43;&#43;) Component</title>
      <link>https://lightjason.org/framework/agentspeak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/framework/agentspeak/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://lightjason.org/images/logo_asl.png#right&#34;  style=&#34;width: 100px; &#34;/&gt; &lt;a href=&#34;https://agentspeak.lightjason.org/&#34;&gt;LightJason/AgentSpeak&lt;/a&gt; is the main component providing the agent functionality.&lt;/p&gt;

&lt;p&gt;The component allows to build agents from the ASL script and contains all &lt;a href=&#34;https://lightjason.org/knowledgebase/builtinactions&#34;&gt;built-in actions&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Basic Knowledge: Actions</title>
      <link>https://lightjason.org/knowledgebase/actions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/actions/</guid>
      <description>&lt;p&gt;Actions enrich agents twofold: First they provide further functionality, for example to compute complex calculations which could be implemented better, i.e. simpler, more scalable, in an imperative programming language. Secondly they allow agents to interact with their environment and other agents.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Basic Knowledge: Atoms</title>
      <link>https://lightjason.org/knowledgebase/atoms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/atoms/</guid>
      <description>&lt;p&gt;Atoms are &lt;strong&gt;unsplittable&lt;/strong&gt; elements and represent the &lt;em&gt;basic building blocks&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Basic Knowledge: Beliefs and Facts</title>
      <link>https://lightjason.org/knowledgebase/beliefsandfacts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/beliefsandfacts/</guid>
      <description>&lt;p&gt;Any &lt;a href=&#34;../literals&#34;&gt;&amp;#8594; literal&lt;/a&gt; can be a belief or fact:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Basic Knowledge: Built-in Actions</title>
      <link>https://lightjason.org/knowledgebase/builtinactions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/builtinactions/</guid>
      <description>&lt;p&gt;This page provides an overview of built-in actions in LightJason/AgentSpeak(L++).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Basic Knowledge: Finite-State Machine</title>
      <link>https://lightjason.org/knowledgebase/finitestatemachine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/finitestatemachine/</guid>
      <description>&lt;script src=&#34;https://lightjason.org/js/statemachine.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;state-machine&#34;&gt;State Machine&lt;/h2&gt;

&lt;p&gt;A &lt;a href=&#34;https://en.wikipedia.org/wiki/Finite-state_machine&#34;&gt;Finite-State Machine&lt;/a&gt; is a system with explicitly defined states and transitions between the states with the following syntax&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Basic Knowledge: Goals</title>
      <link>https://lightjason.org/knowledgebase/goals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/goals/</guid>
      <description>&lt;p&gt;Goals define which plans an agent should try to instantiate and execute.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Basic Knowledge: Literals</title>
      <link>https://lightjason.org/knowledgebase/literals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/literals/</guid>
      <description>&lt;script src=&#34;https://lightjason.org/js/agentcycle.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Literals are the conclusion of terms and atoms. They have to start with a &lt;strong&gt;lower-case letter&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Basic Knowledge: Plans and Logic Rules</title>
      <link>https://lightjason.org/knowledgebase/plansandrules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/plansandrules/</guid>
      <description>&lt;p&gt;In contrast to &lt;a href=&#34;../literals&#34;&gt;&amp;#8594; literals&lt;/a&gt;, &lt;a href=&#34;../variables&#34;&gt;&amp;#8594; variables&lt;/a&gt; and &lt;a href=&#34;../beliefsandfacts&#34;&gt;&amp;#8594; beliefs and facts&lt;/a&gt;, plans and rules are &lt;em&gt;executable structures&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Basic Knowledge: Terms</title>
      <link>https://lightjason.org/knowledgebase/terms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/terms/</guid>
      <description>&lt;p&gt;Terms can represent &lt;strong&gt;any value- and data-type&lt;/strong&gt; within the language.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Basic Knowledge: Unification</title>
      <link>https://lightjason.org/knowledgebase/unification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/unification/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Unification_(computer_science)&#34;&gt;Unification&lt;/a&gt; is the process for &lt;em&gt;setting values from one literal into the variables of another literal&lt;/em&gt;, e.g. determining the current value of &lt;code&gt;Colour&lt;/code&gt; in &lt;code&gt;light(Colour)&lt;/code&gt;.
Note: &lt;code&gt;Colour&lt;/code&gt; is a variable! Based on the previous &lt;a href=&#34;../literals#time&#34;&gt;&amp;#8594; time example&lt;/a&gt; the procedure can look as follows:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Basic Knowledge: Variables</title>
      <link>https://lightjason.org/knowledgebase/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/variables/</guid>
      <description>&lt;p&gt;Variables are specialised &lt;a href=&#34;../terms&#34;&gt;&amp;#8594; terms&lt;/a&gt; to store information during runtime.
They can be used to define &lt;a href=&#34;../literals&#34;&gt;&amp;#8594; literals&lt;/a&gt; with a &lt;em&gt;placeholder&lt;/em&gt; and (in contrast to &lt;a href=&#34;../atoms&#34;&gt;&amp;#8594; atoms&lt;/a&gt; or literals) begin with an upper-case letter.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Benchmark</title>
      <link>https://lightjason.org/benchmark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/benchmark/</guid>
      <description>&lt;p&gt;In the following, we present a benchmark we conducted to show a) how well LightJason performs on doing agent-related tasks and b) how it compares with similar platforms.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://lightjason.org/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/contact/</guid>
      <description>We are working in the Mobile and Enterprise Computing research group at Clausthal University of Technology, Germany. Contact is possible via email or post address of the institute.
Malte Aschermann malte [at] lightjason.orgModelling, Testing, Scenario Design, Teaching / Documentation 
Sophie Dennisen sophie [at] lightjason.org   Modelling, Testing / Usage, Scenario Design, Teaching / Documentation 
Philipp Kraus philipp [at] lightjason.org   Architect, Developer, Tutorials, Webmaster (Admin-C)</description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>https://lightjason.org/credits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/credits/</guid>
      <description>&lt;p&gt;We would like to give credit to some people who helped us with our work by providing us with ideas, discussion or feedback to optimise our work continuously.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EMAS 2014 - A scalable runtime platform for multiagent-based simulation</title>
      <link>https://lightjason.org/publications/2014-emas-maserati/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/publications/2014-emas-maserati/</guid>
      <description>In this publication, we present an architecture of a scalable multi-agent framework. This idea is based on the problem that all current frameworks are neither constructed for a large number of agents nor flexible enough to create a very detailed behaviour or add to an existing platform.
Based on this problem, we try to separate different elements of a multi-agent system:
 Microkernel: The execution of agents and the whole system.</description>
    </item>
    
    <item>
      <title>Framework</title>
      <link>https://lightjason.org/framework/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/framework/</guid>
      <description>&lt;p&gt;The multi-agent framework is split up into different parts. Each component is provided with separate documentation. In this section, we give an overview of all framework elements. The whole framework is published at &lt;a href=&#34;http://mvnrepository.com&#34;&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Knowledge Base</title>
      <link>https://lightjason.org/knowledgebase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/</guid>
      <description>&lt;p&gt;In this section we provide a background of multi-agent modelling, a gentle introduction into logic programming and basic and advanced knowledge helpful for understanding the theoretical concepts of our framework.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Publications</title>
      <link>https://lightjason.org/publications/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/publications/</guid>
      <description>&lt;p&gt;Here, we list all publications relating to LightJason (&lt;a href=&#34;https://lightjason.org/references.bib&#34;&gt;BibTeX format&lt;/a&gt;); for some publications we provide comments containing additional information about the publication.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Theoretical Introduction: Difference to Jason</title>
      <link>https://lightjason.org/knowledgebase/differencetojason/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/differencetojason/</guid>
      <description>&lt;p&gt;We describe the difference between LightJason and &lt;a href=&#34;http://jason.sourceforge.net/&#34;&gt;Jason&lt;/a&gt;, because in general the LightJason framework is inspired by Jason, but it is &lt;strong&gt;not&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a copy of Jason&lt;/li&gt;
&lt;li&gt;or an extension to Jason&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Theoretical Introduction: From Finite-State Machine and Logical Programming to an Agent</title>
      <link>https://lightjason.org/knowledgebase/agent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/agent/</guid>
      <description>&lt;script src=&#34;https://lightjason.org/js/agentfsm.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;The main definition of our &lt;a href=&#34;https://en.wikipedia.org/wiki/Belief%E2%80%93desire%E2%80%93intention_software_model&#34;&gt;BDI (Belief-Desire-Intention) framework&lt;/a&gt; follows &lt;a href=&#34;http://aima.cs.berkeley.edu/&#34;&gt;Russell &amp;amp; Norvig - Artificial Intelligence: A Modern Approach&lt;/a&gt; with the structure of &lt;em&gt;goal-based agents&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Theoretical Introduction: Logic Programming</title>
      <link>https://lightjason.org/knowledgebase/logicalprogramming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/knowledgebase/logicalprogramming/</guid>
      <description>&lt;p&gt;This article gives a short introduction in &lt;a href=&#34;https://en.wikipedia.org/wiki/Logic_programming&#34;&gt;logic programming concepts&lt;/a&gt;, which are needed to write the source code of an agent.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tutorial: Actions</title>
      <link>https://lightjason.org/tutorials/actions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/tutorials/actions/</guid>
      <description>&lt;p&gt;This tutorial explains the concept and usage of actions. Actions are &lt;em&gt;executable mechanisms&lt;/em&gt;. We support a lot of different actions which support some &lt;a href=&#34;https://lightjason.org/knowledgebase/builtinactions&#34;&gt;basic functionality&lt;/a&gt;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tutorial: Communication</title>
      <link>https://lightjason.org/tutorials/communication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/tutorials/communication/</guid>
      <description>&lt;p&gt;LightJason architecture does not support in general a built-in communication, because communication and
agent addressing / naming depends on the domain or underlying software architecture.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tutorial: Develop an AgentSpeak Scenario in 15 Minutes</title>
      <link>https://lightjason.org/tutorials/agentspeak-in-fifteen-minutes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/tutorials/agentspeak-in-fifteen-minutes/</guid>
      <description>&lt;p&gt;This tutorial explains how to develop a simple, but fully working scenario in 15 minutes with the most recent version of the AgentSpeak(L++) source code.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tutorial: Environment</title>
      <link>https://lightjason.org/tutorials/environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/tutorials/environment/</guid>
      <description>&lt;p&gt;The LightJason system architecture does not require any environment, but you can easily write your own.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tutorial: How to Build AgentSpeak from Source</title>
      <link>https://lightjason.org/tutorials/buildagentspeak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/tutorials/buildagentspeak/</guid>
      <description>&lt;p&gt;This tutorial explains how to build LightJason/AgentSpeak(L++) from source.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tutorial: Trigger</title>
      <link>https://lightjason.org/tutorials/trigger/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/tutorials/trigger/</guid>
      <description>&lt;p&gt;This tutorial explains the functionality of &lt;em&gt;agent triggering&lt;/em&gt;. For understanding the purpose of triggers you have to understand the concept of events, which is a well-known concept in &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/uiswing/events/&#34;&gt;UI programming&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tutorials</title>
      <link>https://lightjason.org/tutorials/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/tutorials/</guid>
      <description>&lt;p&gt;In this section, we introduce LightJason/AgentSpeak(L++) from a &lt;em&gt;hands-on&lt;/em&gt; perspective by providing tutorials for understanding the practical applications of our framework.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Wizard</title>
      <link>https://lightjason.org/tutorials/wizard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lightjason.org/tutorials/wizard/</guid>
      <description>&lt;p&gt;The wizard allows you to create a full working package of a &lt;em&gt;multi-agent simulation&lt;/em&gt;. You get a zip file which contains a full working &lt;a href=&#34;https://maven.apache.org/&#34;&gt;Maven&lt;/a&gt; project.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>